1. 모델링의 특징
  -. 추상화, 단순화, 명확화 

2. 데이터 모델링의 3단계 
  2.1 개념적 데이터 모델링 - 추상화 높음, 전사적, EA , 업무중심적
  2.2 논리적 데이터 모델링 - 재사용성높임 , 데이터 모델링최종 , (Key, 속성, 관계)
  2.3 물리적 데이터 모델링 - 실제 DB에 반영 하도록 성능, 저장, 물리적 성격고려

3. 데이터베이스의 3단계 구조
  3.1 외부단계 - 사용자 가까움(개별 사용자 관점), 사용자, 응용프로그래머가 접근하는 DB 정보
  3.2 개념단계 - 모든 사용자관점을 통합하여 조직전체 DB를 기술, DB에 저장되는 데이터와 데이터간의 관계 표현
  3.3 내부단계 - DB가 물리적으로 저장되는 형식을 표현

4. 엔터티 - 테이블, 인스턴스 - ROW , 속성 - COLUMN

5. 엔터티의 분류
  5.1 기본엔터티 - 업무에 원래 존재하는 정보, 독립적으로 생성, 자식엔터티를 가질수 있음.
  5.2 중심엔터티 - 기본엔터티에서 파생, 행위 엔터티 생성, 업무에 있어 중심역할, 데이터 양이 많이 발생
  5.3 행위엔터티 - 2개이상의 엔터티로부터 파생, 데이터가 자주 변경, 증가할 수 있음.

6. 속성 - 속성에 따른 분류 
  6.1 기본속성 - 업무 프로세스 분석을 통해 바로 정의가 가능한 속성
  6.2 설계속성 - 업무에 존재하지는 않지만 설계하다 보니 필요하다고 판단되어 도출해낸 속성
  6.3 파생속성 - 다론 속성의 속성값을 계산하거나 특정한 규칙으로 변형하여 생성한 속성

7. 관계(엔터티와 엔터티의 관계)
  7.1 관계명 - 관계의 이름
  7.2 관계차수 - 관계에 참여하는 수
  7.3 관계 선택사양 - 필수인지 선택인지의 여부

8. 식별자 (엔터티는 -> 인스턴스 -> 속성으로 자신의 특성을 표현 이중에서 각 인스턴스를 구분해주는 것)
  8.1 주식별자 - 최소성, 유일성, 불변성, 존재성
  8.2 분류 (대표성, 스스로 생성되었는지, 단일속성, 대체) 여부에 따라 분류된다.
    -. 대표성 
      1. 주식별자 - 유일성, 최소성, 불변성, 존재성을 가진 대표 식별자, 다른 엔터티와 참조 관계로 연결
      2. 보조식별자 - 인스턴스 식별 가능하지만 대표 식별자 아님다른 엔터티와 참조 관계로 연결X
    -. 스스로 생성되었는지? 여부
      1. 내부식별자 - 엔터티 내부에서 스스로 생성된 식별자
      2. 외부식별자 - 다른 엔터티에서 온 식별자, 다른엔터티와 연결고리 역할
    -. 단일 속성의 여부
      1. 단일식별자 - 하나의 속성으로 구성된 식별자
      2. 복합식별자 - 두개 이상의 속성으로 구성된 식별자
    -. 대체여부
      1. 원조식별자(본질식별자) - 업무프로세스에 존재하는 식별자, 가공되지 않는 엔터티식별자
      2. 대리식별자(인조식별자) - 주식별자의 속성이 두개 이상인 경우 그 속성들을 하나로 묶어서 사용하는 식별자

9. 데이터모델링시 주의점
  9.1 중복: 같은데이터가 여러 엔터티에 저장
  9.2 비유연성 - 데이터모델과 프로세스를 분리하여 유연성을 높인다.
  9.3 비일관성 

10 . 두개의 엔터티 사이에서 관계를 도출시 확인해야 할 사항
  10.1 두개의 엔터티 사이에 관심있는 연관규칙이 존재하는가?
  10.2 두개의 엔터티 사이에 정보의 조합이 발생되는가?
  10.3 업무기술서, 장표에 관계연결에 대한 규칙이 서술되어 있는가?
  10.4 업무기술서 장표에 관계연결을 가능하게 하는 동사가 있는가? 

11. 기설파, 기중행, 개논물, 외개내

12. 정규화
  12.1 제 1정규화
    -. 모든 속성은 반드시 하나의 값만 가져야 한다.
  12.2 제 2정규화
    -. 엔터티의 모든 일반속성은 반드시 모든 주식별자에 종속되어야 한다.
  12.3 제 3정규화
    -. 주식별자가 아닌 모든 속성간에는 서로 종속될 수 없다. 

13. 테이블 분할
  13.1 데이블 수직분할 : 엔터티의 일부 속성을 분할 하는것
  13.2 테이블 수평분할 : 엔터티의 인스턴스를 특정기준으로 별도의 엔터티를 파티셔닝 하는것

14. 반정규화 기법
  : 중복컬럼 추가 , 파생컬럼추가, 이력테이블 컬럼추가, 중복 관계 추가

--------------------------------SQL 기본및 활용
15. LTRIM, RTRIM (문자열, [문자열]) 
  -> 2번 문자열 중 한글자라도 같지 않을 때까지 없애준다. 

16. SUBSTR('블랙핑크', 3, 2 ) 
  -> 핑크

17. LPAD ('JENNIE' , 10, 'v') 
  -> vvvvJENNIE

18. MOD(15 , -4) 
  -> 3

19. SELECT (EXTRACT( [year,month,day] FROM SYSDATE)
      FROM DUAL 

20. NULL 관련 문법
  20.1 NVL(null,1) >>> 1
  20.2 NVL2(null, 2, 3) -> 3 // NVL2( 1, 2, 3 ) -> 2 
  20.3 NULLIF( 1, 1 ) -> null // NULLIF( 4, 2) -> 4
  20.4 COALESCE (null, 1, 2 ) -> 1

19. 연산자 우선순위
  산술연산자 > 연결연산자 > 비교연산자 > IN,LIKE, BETWEEN , IS NULL > NOT > AND > OR

20.   EQUI JOIN -> WHERE A.컬럼명 = B.컬럼명
  NONEQUI JOIN  -> BETWEEN , > , >= , M , <=

21. INNER JOIN (교집합)
22. LEFT OUTER JOIN (LEFT만) --> 없는 데이터는 NULL로 표시
23. RIGHT OUTER JOIN (RIGHT만) --> 없는 데이터는 NULL로 표시
24. FULL OUTER JOIN (합집합)
25. NATURAL JOIN -> (교집합) 모든 컬럼이 같을 경우에만 표출, USING 절을 이용해 조건을 건다 (컬럼명, 컬럼명) ->> 컬럼명이 같은 경우 
26. CROSS JOIN -> 모든 경우의 수를 나타낸다. 










